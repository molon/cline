{
	"name": "clinex",
	"displayName": "ClineX",
	"description": "Autonomous coding agent right in your IDE, capable of creating/editing files, running commands, using the browser, and more with your permission every step of the way.",
	"version": "3.2.5",
	"icon": "assets/icons/icon.png",
	"galleryBanner": {
		"color": "#617A91",
		"theme": "dark"
	},
	"engines": {
		"vscode": "^1.84.0"
	},
	"author": {
		"name": "Cline Bot Inc."
	},
	"license": "Apache-2.0",
	"publisher": "clinex",
	"repository": {
		"type": "git",
		"url": "https://github.com/cline/cline"
	},
	"homepage": "https://cline.bot",
	"categories": [
		"AI",
		"Chat",
		"Programming Languages",
		"Education",
		"Snippets",
		"Testing"
	],
	"keywords": [
		"cline",
		"claude",
		"dev",
		"mcp",
		"openrouter",
		"coding",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama"
	],
	"activationEvents": [],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "clinex-ActivityBar",
					"title": "ClineX",
					"icon": "$(symbol-operator)"
				}
			]
		},
		"views": {
			"clinex-ActivityBar": [
				{
					"type": "webview",
					"id": "clinex.SidebarProvider",
					"name": ""
				}
			]
		},
		"commands": [
			{
				"command": "clinex.plusButtonClicked",
				"title": "New Task",
				"icon": "$(add)"
			},
			{
				"command": "clinex.mcpButtonClicked",
				"title": "MCP Servers",
				"icon": "$(server)"
			},
			{
				"command": "clinex.historyButtonClicked",
				"title": "History",
				"icon": "$(history)"
			},
			{
				"command": "clinex.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "clinex.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "clinex.openInNewTab",
				"title": "Open In New Tab",
				"category": "ClineX"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "clinex.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == clinex.SidebarProvider"
				},
				{
					"command": "clinex.mcpButtonClicked",
					"group": "navigation@2",
					"when": "view == clinex.SidebarProvider"
				},
				{
					"command": "clinex.historyButtonClicked",
					"group": "navigation@3",
					"when": "view == clinex.SidebarProvider"
				},
				{
					"command": "clinex.popoutButtonClicked",
					"group": "navigation@4",
					"when": "view == clinex.SidebarProvider"
				},
				{
					"command": "clinex.settingsButtonClicked",
					"group": "navigation@5",
					"when": "view == clinex.SidebarProvider"
				}
			]
		},
		"configuration": {
			"title": "Cline",
			"properties": {
				"cline.vsCodeLmModelSelector": {
					"type": "object",
					"properties": {
						"vendor": {
							"type": "string",
							"description": "The vendor of the language model (e.g. copilot)"
						},
						"family": {
							"type": "string",
							"description": "The family of the language model (e.g. gpt-4)"
						}
					},
					"description": "Settings for VSCode Language Model API"
				},
				"cline.mcp.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Include MCP server functionality in AI prompts. When disabled, the AI will not be aware of MCP capabilities. This saves context window tokens."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run build:webview && npm run check-types && npm run lint && node esbuild.js --production",
		"compile-tests": "tsc -p ./tsconfig.test.json --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint src --ext ts",
		"format": "prettier . --check",
		"format:fix": "prettier . --write",
		"test": "vscode-test",
		"install:all": "npm install && cd webview-ui && npm install",
		"start:webview": "cd webview-ui && npm run start",
		"build:webview": "cd webview-ui && npm run build",
		"test:webview": "cd webview-ui && npm run test",
		"publish:marketplace": "vsce publish && ovsx publish",
		"prepare": "husky"
	},
	"devDependencies": {
		"@types/chai": "^5.0.1",
		"@types/diff": "^5.2.1",
		"@types/mocha": "^10.0.7",
		"@types/node": "20.x",
		"@types/should": "^11.2.0",
		"@types/vscode": "^1.84.0",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.4.0",
		"chai": "^4.3.10",
		"esbuild": "^0.21.5",
		"eslint": "^8.57.0",
		"husky": "^9.1.7",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.3.3",
		"should": "^13.2.3",
		"typescript": "^5.4.5"
	},
	"dependencies": {
		"@anthropic-ai/bedrock-sdk": "^0.10.2",
		"@anthropic-ai/sdk": "^0.26.0",
		"@anthropic-ai/vertex-sdk": "^0.4.1",
		"@google/generative-ai": "^0.18.0",
		"@mistralai/mistralai": "^1.3.6",
		"@modelcontextprotocol/sdk": "^1.0.1",
		"@types/clone-deep": "^4.0.4",
		"@types/get-folder-size": "^3.0.4",
		"@types/pdf-parse": "^1.1.4",
		"@types/turndown": "^5.0.5",
		"@vscode/codicons": "^0.0.36",
		"axios": "^1.7.4",
		"cheerio": "^1.0.0",
		"chokidar": "^4.0.1",
		"clone-deep": "^4.0.1",
		"default-shell": "^2.2.0",
		"delay": "^6.0.0",
		"diff": "^5.2.0",
		"execa": "^9.5.2",
		"fast-deep-equal": "^3.1.3",
		"firebase": "^11.2.0",
		"get-folder-size": "^5.0.0",
		"globby": "^14.0.2",
		"isbinaryfile": "^5.0.2",
		"mammoth": "^1.8.0",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"openai": "^4.61.0",
		"os-name": "^6.0.0",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"puppeteer-chromium-resolver": "^23.0.0",
		"puppeteer-core": "^23.4.0",
		"serialize-error": "^11.0.3",
		"simple-git": "^3.27.0",
		"strip-ansi": "^7.1.0",
		"tree-sitter-wasms": "^0.1.11",
		"turndown": "^7.2.0",
		"web-tree-sitter": "^0.22.6",
		"zod": "^3.23.8"
	}
}
